name: Electron

on:
  workflow_dispatch:

jobs:
  build-react-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: v16.13.0
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - name: dd
        run: yarn electron:sync
      - uses: actions/upload-artifact@v2
        with:
          name: electron
          path: electron/
  release-binaries:
    needs: build-react-app
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: v16.13.0
      - uses: actions/download-artifact@v2
        with:
          name: electron
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn electron:make
      - uses: actions/upload-artifact@v2
        if: matrix.os == "ubuntu-latest'
        with:
          name: artifacts
          path: |
            dist/*.tar.gz
            dist/*.rpm
            dist/*.deb
            dist/latest.yml
      - uses: actions/upload-artifact@v2
        if: matrix.os == "macos-latest'
        with:
          name: artifacts
          path: |
            dist/*.dmg
            dist/*.dmg.blockmap
            dist/latest-mac.yml
      - uses: actions/upload-artifact@v2
        if: matrix.os == "windows-latest'
        with:
          name: artifacts
          path: |
            dist/*.exe
            dist/*.exe.blockmap