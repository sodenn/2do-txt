name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Create GitHub pre-release
    runs-on: ubuntu-latest
    outputs:
      gitTag: ${{ steps.semantic.outputs.gitTag }}
      gitRev: ${{ steps.git_rev.outputs.gitRev }}
      releaseId: ${{ steps.release_id.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - id: semantic
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: git_rev
        run: echo "gitRev=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - id: release_id
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: "${{ steps.vars.outputs.gitTag }}"
            })
            return data.id
  attach-binaries:
    name: Attach binaries to GitHub Release
    needs:
      - release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.release.outputs.gitRev }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install dependencies
        run: npm ci
      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          releaseId: ${{ needs.release.outputs.releaseId }}
          tagName: ${{ needs.release.outputs.gitTag }}
  publish-release:
    name: Publish GitHub release
    if: github.ref == 'refs/heads/main'
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.release.outputs.releaseId }}",
              prerelease: false,
              make_latest: true
            })